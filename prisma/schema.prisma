// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // User preferences
  weightUnit     String  @default("pounds") // "pounds" or "kilograms"
  availablePlates String // JSON string of available plates: [100, 45, 35, 25, 10, 5, 2.5]
  
  // Lift data (fixed set of 4 lifts)
  squatOneRepMax    Float?
  squatTrainingMax  Float?
  benchOneRepMax    Float?
  benchTrainingMax  Float?
  deadliftOneRepMax Float?
  deadliftTrainingMax Float?
  ohpOneRepMax      Float?
  ohpTrainingMax    Float?
  
  // Relationships
  cycles    Cycle[]
  workouts  Workout[]
  
  @@map("users")
}

// Training cycle (4-week period)
model Cycle {
  id        String   @id @default(cuid())
  number    Int      // Cycle number (1, 2, 3, etc.)
  startDate DateTime
  endDate   DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  workouts  Workout[]
  
  @@map("cycles")
}

// Individual workout session
model Workout {
  id        String   @id @default(cuid())
  date      DateTime
  notes     String?
  liftType  String   // "squat", "bench", "deadlift", "ohp"
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  cycleId   String
  cycle     Cycle    @relation(fields: [cycleId], references: [id], onDelete: Cascade)
  
  sets      WorkoutSet[]
  
  @@map("workouts")
}

// Individual sets within a workout
model WorkoutSet {
  id        String   @id @default(cuid())
  setNumber Int      // 1, 2, 3, etc.
  reps      Int      // Number of repetitions
  weight    Float    // Weight used
  completed Boolean  @default(true)
  
  workoutId String
  workout   Workout  @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  
  @@map("workout_sets")
}