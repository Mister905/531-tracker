// Production PostgreSQL schema
// Use this for production deployment on AWS

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relationships
  lifts     Lift[]
  cycles    Cycle[]
  workouts  Workout[]
  
  @@map("users")
}

// Lift model (Squat, Bench, Deadlift, OHP)
model Lift {
  id          String   @id @default(cuid())
  name        String   // "Squat", "Bench Press", etc.
  oneRepMax   Float    // Current 1RM
  trainingMax Float    // 90% of 1RM for calculations
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  cycles      Cycle[]
  workouts    Workout[]
  
  @@map("lifts")
}

// Training cycle (4-week period)
model Cycle {
  id        String   @id @default(cuid())
  number    Int      // Cycle number (1, 2, 3, etc.)
  startDate DateTime
  endDate   DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  lifts     Lift[]
  workouts  Workout[]
  
  @@map("cycles")
}

// Individual workout session
model Workout {
  id        String   @id @default(cuid())
  date      DateTime
  notes     String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  liftId    String
  lift      Lift     @relation(fields: [liftId], references: [id], onDelete: Cascade)
  
  cycleId   String
  cycle     Cycle    @relation(fields: [cycleId], references: [id], onDelete: Cascade)
  
  sets      WorkoutSet[]
  
  @@map("workouts")
}

// Individual sets within a workout
model WorkoutSet {
  id        String   @id @default(cuid())
  setNumber Int      // 1, 2, 3, etc.
  reps      Int      // Number of repetitions
  weight    Float    // Weight used
  completed Boolean  @default(true)
  
  workoutId String
  workout   Workout  @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  
  @@map("workout_sets")
}
